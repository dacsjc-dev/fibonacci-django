version: '3.8'

services:
  nginx:
    image: nginx
    ports:
      - '443:443'
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - server_volume:/app/backend/static
  redis:
    restart: unless-stopped
    image: redis

  # pgdb:
  #   image: 'postgres:15.1-alpine'
  #   restart: unless-stopped
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   environment:
  #     POSTGRES_DB: 'postgres'
  #     POSTGRES_USER: 'postgres'
  #     POSTGRES_PASSWORD: 'postgres'
  #   expose:
  #     - 5432

  server:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    ports:
      - '8000:8000'
    volumes:
      - server_volume:/app/backend/static
    environment:
      Debug: "True"
      CELERY_BROKER_URL: 'redis://redis:6379'
      CELERY_RESULT_BACKEND: 'redis://redis:6379'
      DJANGO_SUPERUSER_USERNAME: 'admin'
      DJANGO_SUPERUSER_PASSWORD: '123123'
      DJANGO_SUPERUSER_EMAIL: 'test@email.com'
      # DATABASE_TYPE: 'postgresql'
      # POSTGRES_HOST: 'pgdb'
      # POSTGRES_NAME: 'postgres'
      # POSTGRES_USER: 'postgres'
      # POSTGRES_PASSWORD: 'postgres'
      # POSTGRES_PORT: '5432'
    depends_on:
      - redis
      # - pgdb

  # worker:
  #   restart: unless-stopped
  #   build:
  #     context: .
  #     dockerfile: ./docker/backend/Dockerfile
  #   ports:
  #     - '8000:8000'
  #   volumes:
  #     - server_volume:/app/backend/static
  #   environment:
  #     Debug: "True"
  #     CELERY_BROKER_URL: 'redis://redis:6379'
  #     CELERY_RESULT_BACKEND: 'redis://redis:6379'
  #     DATABASE_TYPE: 'postgresql'
  #     POSTGRES_HOST: 'pgdb'
  #     POSTGRES_NAME: 'postgres'
  #     POSTGRES_USER: 'postgres'
  #     POSTGRES_PASSWORD: 'postgres'
  #     POSTGRES_PORT: '5432'
  #   depends_on:
  #     - redis
  #     - server
  #     - pgdb
volumes:
  postgres_data: {}
  server_volume: {}
